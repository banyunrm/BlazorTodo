@page "/countries"

<h3>Countries List</h3>

<a href="countries/create" class="btn btn-success mb-3">Add Country</a>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (countries == null)
{
    <p>Loading...</p>
}
else if (!countries.Any())
{
    <p>No countries found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Code</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in countries)
            {
                <tr>
                    <td>@country.Name</td>
                    <td>@country.Code</td>
                    <td>
                        <a class="btn btn-info btn-sm" href="/countries/details/@country.Id">Details</a>
                        <a class="btn btn-warning btn-sm" href="/countries/edit/@country.Id">Edit</a>
                        <a class="btn btn-danger btn-sm" href="/countries/delete/@country.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Country>? countries;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadCountries();
    }

    private async Task LoadCountries()
    {
        try
        {
            errorMessage = string.Empty;
            countries = await Database.Countries.ToListAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading countries: {ex.Message}";
            Console.WriteLine(errorMessage);
            countries = new List<Country>();
        }
    }
}
