@page "/todos/edit/{Id:int}"
@using Microsoft.EntityFrameworkCore

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">
    <h3 class="mb-4">Edit Todo</h3>

    @if (todo == null)
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
    }
    else
    {
        <MudPaper Class="pa-6" Elevation="3">
            <MudTextField @bind-Value="todo.Title" Label="Title" Variant="Variant.Outlined" Class="mb-4" />
            <MudTextField @bind-Value="todo.Description" Label="Description" Variant="Variant.Outlined" Class="mb-4" />
            
            <MudCheckBox T="bool" @bind-Checked="todo.IsDone" Label="Is Done?" Class="mb-4" Color="Color.Primary" />

            <MudDivider Class="my-4" />
            
            <div class="d-flex justify-start mt-4">
                <MudButton Color="Color.Warning" 
                          Variant="Variant.Filled" 
                          Size="Size.Medium"
                          OnClick="UpdateTodo" 
                          Class="me-3">Update</MudButton>
                <MudButton Color="Color.Secondary" 
                          Variant="Variant.Outlined" 
                          Size="Size.Medium"
                          OnClick="Cancel">Cancel</MudButton>
            </div>
        </MudPaper>
    }
</MudContainer>

@code {
    [Parameter] public int Id { get; set; }
    private Todo? todo;

    protected override async Task OnInitializedAsync()
    {
        todo = await Database.Todos.FindAsync(Id);
    }

    private async Task UpdateTodo()
    {
        if (todo != null)
        {
            Database.Entry(todo).State = EntityState.Modified;
            await Database.SaveChangesAsync();
        }
        Nav.NavigateTo("/todos");
    }

    private void Cancel()
    {
        Nav.NavigateTo("/todos");
    }
}
